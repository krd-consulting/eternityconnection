<?php

define ('BAB_TEXT_LOGGED_IN', t('Buy Appointment'));
define ('BAB_TEXT_FREE', t('Book Free Appointment'));
define ('BAB_TEXT_ANONYMOUS', t('Log in to schedule appointment'));

define ('BAB_BOOKED',t('Booked'));
define ('BAB_AVAILABLE', t('Available'));

/**
 * Implements hook_form_alter().
 *
 * Makes 'Total Amount' field readonly to avoid cases when user
 * changes amount manually.
 */
function buy_appointment_button_form_alter(&$form, &$form_state,$form_id){
  if (arg(0) == 'node' && is_numeric(arg(1)) && $form_id == 'webform_client_form_' . arg(1)) {
    $form['submitted']['civicrm_1_contribution_1_contribution_total_amount']['#attributes']['readonly'] = 'readonly';
  }
}
function buy_appointment_button_preprocess_node ($vars) {

  $vars['title_prefix'] = 'test';

}

/**
 * Implements hook_views_pre_render().
 *
 * Add 'Booked/Available' badge to events in views calendar.
 */
function buy_appointment_button_views_pre_render(&$view) {
  if ($view->name == 'appointments') {
    foreach($view->result as $key => $result) {
      $text = BAB_BOOKED;
      if ($result->_field_data['nid']['entity']->status) {
        $text = BAB_AVAILABLE;
      }
      #kpr($view->result[$key]);
      $view->result[$key]->node_title = '[' . $text . '] ' . $view->result[$key]->node_title;
    }
  }
}



function buy_appointment_button_preprocess_page(&$vars) {
  if (isset($vars['node'])) {
    $node = $vars['node'];
    $app_node = $node;
    if ($node->type == 'webform' && $node->webform['components']['9']['form_key'] == 'appointment_node') {
      $app_node = node_load($node->webform['components']['9']['value']);
    }
    if ($app_node->type == 'event_calendar') {
      $text = BAB_BOOKED;
      if ($app_node->status) {
        $text = BAB_AVAILABLE;
      }
      $vars['title_prefix']['status_tag']['#markup'] = '<div class="appointment-status-badge '
        . strtolower($text) .'">' . $text . '</div>';
    }
  }
}


/**
 * Implements hook_menu().
 */
function buy_appointment_button_menu() {
  $items['node/%node/confirmation-page'] = array(
    'title' => t('Appointment Booked'),
    'page callback' => 'buy_appointment_button_confirmation_page',
    'page arguments' => array(1),
    'type' => MENU_CALLBACK,
    'access callback' => 'user_is_logged_in',
  );
  return $items;
}


function buy_appointment_button_confirmation_page($webform) {
  if (isset($webform->type) && $webform->type == 'webform') {
    drupal_set_message(t("Your payment proceed successfully. Appointment was booked for you."));
    #$webform_node->status = 0;
    #node_save($webform_node);
    if ($webform->webform['components']['9']['form_key'] == 'appointment_node') {
      $app_node = node_load($webform->webform['components']['9']['value']);
      $app_node->status = 0;
      node_save($app_node);
    }
  }
  // If this is not webform just redirect to node page.
  drupal_goto('node/' . $webform->nid);
}

/**
 * Implements hook_node_view().
 */
function buy_appointment_button_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'event_calendar') {
    $form = drupal_get_form('buy_appointment_button_form', $node);
    $node->content['redirect_button'] = $form;
  }
}


function buy_appointment_button_form($form, &$form_submit, $app_node) {
  global $user;
  if ($app_node->status) {
    $button_text = BAB_TEXT_FREE;
    if ($app_node->field_price[LANGUAGE_NONE][0]['value'] > 0) {
      $button_text = BAB_TEXT_ANONYMOUS;
      if ($user->uid) {
        $button_text = BAB_TEXT_LOGGED_IN;
      }
    }
    $form['app_nid'] = array(
      '#type' => 'hidden',
      '#value' => $app_node->nid,
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => $button_text,
    );
    return $form;
  }
}


function buy_appointment_button_form_submit($form, &$form_state) {
  global $user;
  if (!empty($form_state['app_nid'])) {
    $nid = $form_state['app_nid'];
  }
  elseif (arg(0) == 'node' && is_numeric(arg(1))) {
    $nid = arg(1);
  }

  if ($nid) {
    if ($user->uid) {
      // Logged in user.
      include_once('buy_appointment_button.webform.inc');
      $webform = buy_appointment_button_create_webform($nid);
      if (isset($webform->nid)) {
        drupal_goto('node/' .  $webform->nid);
      }
      else {
        drupal_set_message(t("Appointment Fee wasn't set and payment is not allowed."));
      }
    }
    else {
      // Anonymous.
      // @todo Redirect to webform to avoid an extra step (clicking 'Buy' button at appointment node).
      //       To do so we need to create webform before user logged in
      //       or have special URL for webform creation.
      drupal_goto('user/login', array('query' => array('destination' => 'node/' . $nid)));
    }
  }
  else {
    // This is rear case but it's possible if someone manually change HTML form
    // in browser and submit it. Other cases are possible but I can't imagine that.
    drupal_set_message(t("Missing information about appointment you want to book.
      Site admins already notified about this issue and problem will be fixed soon.
      Please try again later.")
    );
    // @todo send email to admin.
  }
}



